<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.zhiqiang.lu</groupId>
  <artifactId>easycode</artifactId>
  <version>3.1.9</version>
  <dependencies>
    <!-- core -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.10</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.6</version>
    </dependency>
    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jsch</artifactId>
      <version>0.1.55</version>
    </dependency>
    <dependency>
      <groupId>com.github.cverges</groupId>
      <artifactId>expect4j</artifactId>
      <version>1.9</version>
    </dependency>
    <!-- core -->
    <!-- poi -->
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>4.1.2</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>4.1.2</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>itextpdf</artifactId>
      <version>5.5.13.1</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>itext-asian</artifactId>
      <version>5.2.0</version>
      <optional>true</optional>
    </dependency>
    <!-- poi -->
    <!-- office -->
    <dependency>
      <groupId>org.zhiqiang.lu</groupId>
      <artifactId>aspose-words</artifactId>
      <version>15.8.0-jdk16</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.zhiqiang.lu</groupId>
      <artifactId>aspose-cells</artifactId>
      <version>8.5.2</version>
      <optional>true</optional>
    </dependency>
    <!-- office -->
    <!-- 分页 -->
    <dependency>
      <groupId>com.github.pagehelper</groupId>
      <artifactId>pagehelper-spring-boot-starter</artifactId>
      <version>1.2.12</version>
      <optional>true</optional>
    </dependency>
    <!-- 分页 -->
    <!-- web依赖start-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>2.5.2</version>
      <!-- <scope>provided</scope> -->
      <optional>true</optional>
    </dependency>
    <!-- web依赖end-->
    <!-- mybatis-plus-start-->
    <dependency>
      <groupId>com.baomidou</groupId>
      <artifactId>mybatis-plus-boot-starter</artifactId>
      <version>3.4.1</version>
      <optional>true</optional>
    </dependency>
    <!-- mybatis-plus-end-->
    <!-- swagger2-start-->
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>3.0.0</version>
      <optional>true</optional>
    </dependency>
    <!-- swagger2-end-->
    <!-- jar 混淆 -start-->
    <dependency>
      <groupId>net.sf.proguard</groupId>
      <artifactId>proguard-base</artifactId>
      <version>6.2.2</version>
      <optional>true</optional>
    </dependency>
    <!-- jar 混淆 -end-->
  </dependencies>
  <distributionManagement>
    <repository>
      <id>rdc-releases</id>
      <url>https://repo.rdc.aliyun.com/repository/79784-release-NxcOay/</url>
    </repository>
    <snapshotRepository>
      <id>rdc-snapshots</id>
      <url>https://repo.rdc.aliyun.com/repository/79784-snapshot-qlsfy2/</url>
    </snapshotRepository>
  </distributionManagement>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  <pluginRepositories>
    <pluginRepository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </pluginRepository>
  </pluginRepositories>
  <build>
    <finalName>${project.name}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.wvengen</groupId>
        <artifactId>proguard-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>proguard</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <proguardVersion>6.2.2</proguardVersion>
          <injar>${project.build.finalName}.jar</injar>
          <outjar>${project.build.finalName}.jar</outjar>
          <obfuscate>true</obfuscate>
          <options>
            <!-- This option will save all original methods parameters in files defined in -keep sections,
                             otherwise all parameter names will be obfuscate.-->
            <option>-keepparameternames</option>
            <option>-keeppackagenames</option>

            <!-- 不做收缩（删除注释、未被引用代码） -->
            <option>-dontshrink</option>
            <!-- 不做优化（变更代码实现逻辑） -->
            <option>-dontoptimize</option>
            <!-- This option will replace all strings in reflections method invocations with new class names.
                             For example, invokes Class.forName('className')-->
            <option>-adaptclassstrings</option>
            <!-- This option will save all original annotations and etc. Otherwise all we be removed from files.-->
            <!-- 不混淆所有特殊的类 -->
            <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,
							SourceFile,LineNumberTable,*Annotation*,EnclosingMethod</option>
            <!-- This option will save all original names in interfaces (without obfuscate).-->
            <option>-keepnames interface **</option>
            <option>-keepparameternames</option>
            <!-- 不混淆所有包名，本人测试混淆后WEB项目问题实在太多，毕竟Spring配置中有
                大量固定写法的包名 -->
            <option>-keeppackagenames</option>
            
            <!-- This option will save all original interfaces files (without obfuscate) in all packages.-->
            <option>-keep interface * extends * { *; }</option>
            <!-- This option will save all original defined annotations in all class in all packages.-->
            <option>-keepclassmembers class * {
							@org.springframework.beans.factory.annotation.Autowired *;
							@org.springframework.beans.factory.annotation.Value *;
							@org.springframework.stereotype.Service *;
							@org.springframework.stereotype.Component *;
							@org.springframework.scheduling.annotation.Scheduled *;
							}
						</option>
            <!-- 不混淆所有的set/get方法 -->
            <option>-keepclassmembers public class * {void set*(***);***
                    get*();}</option>
            <!-- 不混淆包中的所有类以及类的属性及方法，实体包，混淆了会导致ORM框架及前端无法识别 -->
            <!-- 不对包类的类名进行混淆，但对类中的属性和方法混淆 -->
            <option>-keep class org.zhiqiang.lu.easycode.** {*;}</option>
          </options>
          <libs>
            <!-- Include main JAVA library required.-->
            <lib>${java.home}/lib/rt.jar</lib>
            <lib>${java.home}/lib/jce.jar</lib>
          </libs>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.sf.proguard</groupId>
            <artifactId>proguard-base</artifactId>
            <version>6.2.2</version>
            <scope>runtime</scope>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
</project>